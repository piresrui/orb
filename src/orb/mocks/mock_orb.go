// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/piresrui/orb/orb (interfaces: Orb)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	orb "github.com/piresrui/orb/orb"
)

// MockOrb is a mock of Orb interface.
type MockOrb struct {
	ctrl     *gomock.Controller
	recorder *MockOrbMockRecorder
}

// MockOrbMockRecorder is the mock recorder for MockOrb.
type MockOrbMockRecorder struct {
	mock *MockOrb
}

// NewMockOrb creates a new mock instance.
func NewMockOrb(ctrl *gomock.Controller) *MockOrb {
	mock := &MockOrb{ctrl: ctrl}
	mock.recorder = &MockOrbMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrb) EXPECT() *MockOrbMockRecorder {
	return m.recorder
}

// Hash mocks base method.
func (m *MockOrb) Hash(arg0 string) (*orb.Signup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hash", arg0)
	ret0, _ := ret[0].(*orb.Signup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Hash indicates an expected call of Hash.
func (mr *MockOrbMockRecorder) Hash(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hash", reflect.TypeOf((*MockOrb)(nil).Hash), arg0)
}

// Report mocks base method.
func (m *MockOrb) Report() orb.Report {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Report")
	ret0, _ := ret[0].(orb.Report)
	return ret0
}

// Report indicates an expected call of Report.
func (mr *MockOrbMockRecorder) Report() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Report", reflect.TypeOf((*MockOrb)(nil).Report))
}
